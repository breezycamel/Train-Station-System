/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.106
 * Generated at: 2020-12-03 05:40:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;
import java.util.ArrayList;
import trainstation.model.TrainSchedule;
import trainstation.model.TrainRoute;

public final class userDetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.2.1.slim.min.js\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\" integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<form action=\"");
      out.print( request.getContextPath() );
      out.write("/trainroute\" method=\"post\" class=\"register-form\">\r\n");
      out.write("\t\t<div>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"form-group\" align=\"left\">\r\n");
      out.write("\t\t\t\t<label for=\"inputState\">Origin</label>\r\n");
      out.write("\t\t\t      <select id=\"inputState\" class=\"form-control\" name=\"origin\">\r\n");
      out.write("\t\t\t        <option value=\"NB\" selected>New Brunswick</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"PA\">Paterson</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"PE\">Penn Station</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"TR\">Trenton</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"HCM\">Ga Sai Gon</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"ED\">Edison</option>\r\n");
      out.write("\t\t\t      </select>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\" align=\"left\">\r\n");
      out.write("\t\t\t\t<label for=\"inputState\">Destination</label>\r\n");
      out.write("\t\t\t      <select id=\"inputState\" class=\"form-control\" name=\"destination\">\r\n");
      out.write("\t\t\t        <option value=\"PA\" selected>Paterson</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"ED\">Edison</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"NB\">New Brunswick</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"HCM\">Ga Sai Gon</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"TR\">Trenton</option>\r\n");
      out.write("\t\t\t  \t\t<option value=\"PE\">Penn Station</option>\r\n");
      out.write("\t\t\t      </select>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\" align=\"left\">\r\n");
      out.write("\t\t\t\t<label for=\"inputState\">Date</label>\r\n");
      out.write("\t\t\t    <input name=\"datefield\" type='date'>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<button type=\"submit\" class=\"btn btn-primary submit\">Search</button>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
ArrayList<TrainRoute> routes = (ArrayList<TrainRoute>) request.getAttribute("routes"); 
      out.write("\r\n");
      out.write("\t\t<table id=\"myTable\" class=\"table table-hover\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t  <tr>\r\n");
      out.write("\t\t    <th scope=\"col\">TrainID</th>\r\n");
      out.write("\t\t    <th scope=\"col\"><button onclick=\"sortTable(0)\">Depart Time</button></th>\r\n");
      out.write("\t\t    <th scope=\"col\">Origin</th>\r\n");
      out.write("\t\t    <th scope=\"col\"><button onclick=\"sortTable(2)\">Arrival Time</button></th>\r\n");
      out.write("\t\t    <th scope=\"col\">Destination</th>\r\n");
      out.write("\t\t    <th scope=\"col\"><button onclick=\"sortTable(4)\">Total Fare</button></th>\r\n");
      out.write("\t\t  </tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t  ");
 
		 if (routes !=null){
		 for (TrainRoute route: routes){
      out.write("\r\n");
      out.write("\t\t <form action=\"");
      out.print( request.getContextPath() );
      out.write("/schedule\" method=\"post\" class=\"register-form\">\r\n");
      out.write("\t\t   <tr>\r\n");
      out.write("\t\t    <th scope=\"row\"><select name=\"trainID\"><option value=\"");
      out.print(route.gettrainId() );
      out.write('"');
      out.write('>');
      out.print(route.gettrainId() );
      out.write("</option></th>\r\n");
      out.write("\t\t    <td>");
      out.print( route.getDepartTime() );
      out.write("</td>\r\n");
      out.write("\t\t    <td><select name=\"origin\"><option value=\"");
      out.print(route.getOrigin());
      out.write('"');
      out.write('>');
      out.print(route.getOrigin() );
      out.write("</option></td>\r\n");
      out.write("\t\t    <td>");
      out.print( route.getArrivalTime() );
      out.write("</td>\r\n");
      out.write("\t\t    <td><select name=\"destination\"><option value=\"");
      out.print(route.getDestination() );
      out.write('"');
      out.write('>');
      out.print(route.getDestination() );
      out.write("</option></td>\r\n");
      out.write("\t\t    <td>");
      out.print( route.getTotalFare());
      out.write("</td>\r\n");
      out.write("\t\t  \t<td><button type=\"submit\" class=\"btn btn-primary\">See More</button></td>\r\n");
      out.write("\t\t  </tr>\r\n");
      out.write("\t\t  </form>\r\n");
      out.write("\t\t  ");
}} 
      out.write("\r\n");
      out.write("\t\t  \r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\tfunction sortTable(order) {\r\n");
      out.write("\t\t\tconsole.log(order + \" con cac\")\r\n");
      out.write("\t\t\torder = order - 0;\r\n");
      out.write("\t\t  var table, rows, switching, i, x, y, shouldSwitch;\r\n");
      out.write("\t\t  table = document.getElementById(\"myTable\");\r\n");
      out.write("\t\t  switching = true;\r\n");
      out.write("\t\t  /*Make a loop that will continue until\r\n");
      out.write("\t\t  no switching has been done:*/\r\n");
      out.write("\t\t  while (switching) {\r\n");
      out.write("\t\t    //start by saying: no switching is done:\r\n");
      out.write("\t\t    switching = false;\r\n");
      out.write("\t\t    rows = table.rows;\r\n");
      out.write("\t\t    console.log(rows + \" con\")\r\n");
      out.write("\t\t    /*Loop through all table rows (except the\r\n");
      out.write("\t\t    first, which contains table headers):*/\r\n");
      out.write("\t\t    for (i = 1; i < (rows.length - 1); i++) {\r\n");
      out.write("\t\t      //start by saying there should be no switching:\r\n");
      out.write("\t\t      shouldSwitch = false;\r\n");
      out.write("\t\t      /*Get the two elements you want to compare,\r\n");
      out.write("\t\t      one from current row and one from the next:*/\r\n");
      out.write("\t\t      x = rows[i].getElementsByTagName(\"td\")[order];\r\n");
      out.write("\t\t      y = rows[i + 1].getElementsByTagName(\"td\")[order];\r\n");
      out.write("\t\t      console.log(x.innerHTML + \" con\");\r\n");
      out.write("\t\t      //check if the two rows should switch place:\r\n");
      out.write("\t\t    \tlet valueX = x.innerHTML;\r\n");
      out.write("\t\t      let valueY = y.innerHTML;\r\n");
      out.write("\t\t      \r\n");
      out.write("\t\t    \tif(order == 4){\r\n");
      out.write("\t\t    \t\tvalueX -= 0;\r\n");
      out.write("\t\t    \t\tvalueY -= 0;\r\n");
      out.write("\t\t    \t}\r\n");
      out.write("\t\t      if (valueX > valueY) {\r\n");
      out.write("\t\t        //if so, mark as a switch and break the loop:\r\n");
      out.write("\t\t        shouldSwitch = true;\r\n");
      out.write("\t\t        break;\r\n");
      out.write("\t\t      }\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t    if (shouldSwitch) {\r\n");
      out.write("\t\t      /*If a switch has been marked, make the switch\r\n");
      out.write("\t\t      and mark that a switch has been done:*/\r\n");
      out.write("\t\t      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\r\n");
      out.write("\t\t      switching = true;\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t  }\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t      \r\n");
      out.write("\t\t\r\n");
      out.write("\t<form action=\"");
      out.print( request.getContextPath() );
      out.write("/logout\">\r\n");
      out.write("    \t<button type=\"submit\" value=\"Logout\">Logout</button>\r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
